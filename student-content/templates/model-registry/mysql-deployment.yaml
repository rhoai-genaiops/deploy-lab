{{ $attendees := (.Values.attendees | int) }}
{{- range $attendee := until $attendees }}
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: user{{ $attendee }}-registry-db
  namespace: user{{ $attendee }}-jukebox
  labels:
    component: db
spec:
  replicas: 1
  selector:
    matchLabels:
      component: db
  template:
    metadata:
      name: db
      creationTimestamp: null
      labels:
        component: db
      annotations:
        sidecar.istio.io/inject: 'false'
    spec:
      volumes:
        - name: metadata-mysql
          persistentVolumeClaim:
            claimName: metadata-mysql
      containers:
        - resources: {}
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - '-c'
                - mysql -D $$MYSQL_DATABASE -u$$MYSQL_USER_NAME -p$$MYSQL_ROOT_PASSWORD -e 'SELECT 1'
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 2
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: db-container
          ports:
            - name: dbapi
              containerPort: 3306
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: metadata-mysql
              mountPath: /var/lib/mysql
          terminationMessagePolicy: File
          envFrom:
            - configMapRef:
                name: user{{ $attendee }}-registry-db-parameters
            - secretRef:
                name: user{{ $attendee }}-registry-db-secrets
          image: 'mysql:8.0.3'
          args:
            - '--datadir'
            - /var/lib/mysql/datadir
            - '--default-authentication-plugin=mysql_native_password'
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: Recreate
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
{{- end }}